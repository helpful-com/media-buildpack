#!/usr/bin/env bash

[ $VERBOSE ] && set -o errtrace
set -o nounset

# Reasonable signals to catch / trap, without the caveats of
# #!/bin/bash -[Ee]u
__HUP=1
__INT=2
__QUIT=3
__TERM=15
trap onexit $__HUP $__INT $__QUIT $__TERM

function onexit() {
    local exit_status=${1:-$?}
    echo Exiting $0 with $exit_status
    exit $exit_status
}

scriptname=`basename $0`
globalargs="$@"

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

unset GIT_DIR
TERM=${TERM:-dumb}

echo "-----> Supply"
echo "-----> Install ffmpeg"
echo "-----> Running on $TERM"

BUILD_DIR=$1
VENDOR_DIR="helpful-packages"

FFMPEG_VERSION=${FFMPEG_VERSION:-3.3.2}
DOWNLOAD_URL_DMG="https://evermeet.cx/ffmpeg/ffmpeg-86281-g2413397.dmg"
DOWNLOAD_URL_SOURCE="http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2"
DOWNLOAD_URL_BINARY="https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-64bit-static.tar.xz"
DOWNLOAD_URL=$DOWNLOAD_URL_BINARY

echo "DOWNLOAD_URL = " $DOWNLOAD_URL | indent
echo "DOWNLOAD_URL_SOURCE = " $DOWNLOAD_URL_SOURCE | indent
echo "DOWNLOAD_URL_BINARY = " $DOWNLOAD_URL_BINARY | indent

cd $BUILD_DIR
mkdir -p $VENDOR_DIR
cd $VENDOR_DIR

TEMP_FILE=ffmpeg.tar.xz
TEMP_FILE_MD5=ffmpeg.tar.xz.md5

echo "aebf00c8b6aee7f0ff5f041acfb9f1e9  ffmpeg-release-64bit-static.tar.xz" >> $TEMP_FILE_MD5
echo "-----> Downloading $DOWNLOAD_URL"
curl -L --silent $DOWNLOAD_URL > $TEMP_FILE
if [ $? != 0 ]; then
    echo "Error - unable to install ffmpeg" | indent
    exit 1
fi

echo "-----> Checking MD5 of $TEMP_FILE"
md5sum $TEMP_FILE
if [ $? != 0 ]; then
    echo "Error - unable to check MD5" | indent
    exit 1
fi

tar xJvf $TEMP_FILE
if [ $? != 0 ]; then
    echo "Error - unable to extract archive $TEMP_FILE" | indent
    exit 1
fi


ln -s ./ffmpeg-${FFMPEG_VERSION}-64bit-static/ ./ffmpeg
if [ $? != 0 ]; then
    echo "Error - unable to link installation of ffmpeg" | indent
    exit 1
fi

./ffmpeg/ffmpeg --help
if [ $? != 0 ]; then
    echo "Error - ffmpeg was not installed properly (this means that the download from $DOWNLOAD_URL may be corrupted)" | indent
    exit 1
fi


echo "exporting PATH" | indent
echo "current PATH = $PATH" | indent
PROFILE_PATH="$BUILD_DIR/.profile.d/ffmpeg.sh"
echo "to be set PROFILE_PATH = $PROFILE_PATH" | indent

mkdir -p $(dirname $PROFILE_PATH)
if [ $? != 0 ]; then
    echo "Error - unable to create $PROFILE_PATH" | indent
    exit 1
fi

echo 'export PATH="$PATH:$HOME/helpful-packages/ffmpeg/"' >> $PROFILE_PATH
