#!/usr/bin/env bash

[ $VERBOSE ] && set -o errtrace
set -o nounset

# Reasonable signals to catch / trap, without the caveats of
# #!/bin/bash -[Ee]u
__HUP=1
__INT=2
__QUIT=3
__TERM=15
trap onexit $__HUP $__INT $__QUIT $__TERM

function onexit() {
    local exit_status=${1:-$?}
    echo Exiting $0 with $exit_status
    exit $exit_status
}

scriptname=`basename $0`
globalargs="$@"

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

unset GIT_DIR

echo "-----> Install ffmpeg"

BUILD_DIR=$1
VENDOR_DIR="vendor"

FFMPEG_VERSION=${FFMPEG_VERSION:-3.3.1}

DOWNLOAD_URL_SOURCE="http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2"
DOWNLOAD_URL_BINARY="https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-64bit-static.tar.xz"
DOWNLOAD_URL=$DOWNLOAD_URL_BINARY

echo "DOWNLOAD_URL = " $DOWNLOAD_URL | indent
echo "DOWNLOAD_URL_SOURCE = " $DOWNLOAD_URL_SOURCE | indent
echo "DOWNLOAD_URL_BINARY = " $DOWNLOAD_URL_BINARY | indent

cd $BUILD_DIR
mkdir -p $VENDOR_DIR
cd $VENDOR_DIR

echo "-----> Downloading $DOWNLOAD_URL"
curl -L --silent $DOWNLOAD_URL | gunzip - | tar xvf -
if [ $? != 0 ]; then
    echo "Error - unable to install ffmpeg" | indent
    exit 1
fi

ln -s ./ffmpeg-${FFMPEG_VERSION}-64bit-static/ ./ffmpeg
if [ $? != 0 ]; then
    echo "Error - unable to link installation of ffmpeg" | indent
    exit 1
fi

./ffmpeg/ffmpeg --help

echo "exporting PATH and LIBRARY_PATH" | indent
PROFILE_PATH="$BUILD_DIR/.profile.d/ffmpeg.sh"

mkdir -p $(dirname $PROFILE_PATH)

echo 'export PATH="$PATH:$HOME/vendor/ffmpeg/"' >> $PROFILE_PATH
# echo 'export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$HOME/vendor/ffmpeg/lib"' >> $PROFILE_PATH
